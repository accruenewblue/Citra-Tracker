import json
monsfile=open(r'C:\Users\scien\Documents\GitHub\Orange-Peeler\mon-data',"r+")
mons=json.load(monsfile)
movesfile=open(r"C:\Users\scien\Documents\GitHub\Orange-Peeler\move-data")
movesfile=json.load(movesfile)
abilitiesfile=open(r"C:\Users\scien\Documents\GitHub\Orange-Peeler\ability-data")
abilities=json.load(abilitiesfile)
notesfile=open(r"C:\Users\scien\Documents\GitHub\Orange-Peeler\mon-notes","r+")
notes=json.load(notesfile)
txt=open(r"C:\Users\scien\Downloads\typeimages\txt.txt","r+")
txtfile=txt.readlines()
#4 5 6 placement of mons in a battle
#1 2 3 single=1,4, double=1,2,4,5
battleformat="single"
party=["Zeraora","Mega Steelix","School Form Wishiwashi","Zapdos","Mega Altaria","Mega Aggron"]
opponent=["Ho-Oh","Alolan Exeggutor","Pa'u Style Oricorio","Mimikyu","Gengar"]
ally=["Primal Groudon","Naganadel","Sawsbuck"]
if battleformat=="single":
    mon1=party[0]
    mon2="Egg"
    mon3="Egg"
    mon4=opponent[0]
    mon5="Egg"
    mon6="Egg"
if battleformat=="double":
    mon1=party[0]
    mon2=party[1]
    mon3="Egg"
    mon4=opponent[0]
    mon5=opponent[1]
    mon6="Egg"
if battleformat=="triple":
    mon1=party[0]
    mon2=party[1]
    mon3=party[2]
    mon4=opponent[0]
    mon5=opponent[1]
    mon6=opponent[2]
if battleformat=="SOS":
    mon1=party[0]
    mon2="Egg"
    mon3="Egg"
    mon4=opponent[0]
    mon5=opponent[1]
    mon6="Egg"
if battleformat=="horde":
    mon1=opponent[0]
    mon2=party[0]
    mon3=opponent[1]
    mon4=opponent[2]
    mon5=opponent[3]
    mon6=opponent[4]
if battleformat=="multi":
    mon1=party[0]
    mon2=ally[1]
    mon3="Egg"
    mon4=opponent[0]
    mon5=opponent[1]
    mon6="Egg"
print(txtfile)
if txtfile[0].find("noteclear")==-1:
    mon1=(txtfile[1])[0:-1]
    if txtfile[0].find("coverage")!=-1:
        mon4=(txtfile[2])[0:-1]
    attability="null"
    weather=txtfile[3][0:-1]
    terrain=txtfile[4][0:-1]
print(mon1,mon4)
dataset1={"name":mons[mon1]['name'],
    "form":mons[mon1]['form'],
    "tag":mons[mon1]['tag'],
    "evo":mons[mon1]['evo'],
    "weight":mons[mon1]['weight'],
    "types":mons[mon1]["types"],
    "bst":mons[mon1]['bst'],
    "status":"none",
    "pic":"(img)",
    "notes":{
    "level":[],
    "ability":[],
    "stringnote":"tanks a stab eq",
    "stats":["","","","","","","",""],
    "statnotes":["","","","","",""],
    "moves":["Freeze-Dry","Tail Glow","Energy Ball","Flamethrower"]}}
dataset2={"name":mons[mon2]['name'],
    "form":mons[mon2]['form'],
    "level":[],
    "tag":mons[mon2]['tag'],
    "evo":mons[mon2]['evo'],
    "ability":mons[mon2]["ability"],
    "weight":mons[mon2]['weight'],
    "types":mons[mon2]["types"],
    "bst":mons[mon2]['bst'],
    "status":"none",
    "pic":"(img)",
    "notes":{
    "level":[],
    "ability":[],
    "stringnote":"tanks a stab eq",
    "stats":["","","","","","","",""],
    "statnotes":["","","","","",""],
    "moves":["Discharge","Tail Glow","Energy Ball","Flamethrower"]}}
dataset3={"name":mons[mon3]['name'],
    "form":mons[mon3]['form'],
    "level":[],
    "tag":mons[mon3]['tag'],
    "evo":mons[mon3]['evo'],
    "ability":mons[mon3]["ability"],
    "weight":mons[mon3]['weight'],
    "types":mons[mon3]["types"],
    "bst":mons[mon3]['bst'],
    "status":"none",
    "pic":"(img)",
    "notes":{
    "level":[],
    "ability":[],
    "stringnote":"tanks a stab eq",
    "stats":["","","","","","","",""],
    "statnotes":["","","","","",""],
    "moves":["Discharge","Tail Glow","Energy Ball","Flamethrower"]}}
dataset4={"name":mons[mon4]['name'],
    "form":mons[mon4]['form'],
    "level":[],
    "tag":mons[mon4]['tag'],
    "evo":mons[mon4]['evo'],
    "ability":mons[mon4]["ability"],
    "weight":mons[mon4]['weight'],
    "types":mons[mon4]["types"],
    "bst":mons[mon4]['bst'],
    "status":"none",
    "pic":"(img)",
    "notes":{
    "level":[],
    "ability":[],
    "stringnote":"tanks a stab eq",
    "stats":["","","","","","","",""],
    "statnotes":["","","","","",""],
    "moves":["Discharge","Tail Glow","Energy Ball","Flamethrower"]}}
dataset5={"name":mons[mon5]['name'],
    "form":mons[mon5]['form'],
    "level":[],
    "tag":mons[mon5]['tag'],
    "evo":mons[mon5]['evo'],
    "ability":mons[mon5]["ability"],
    "weight":mons[mon5]['weight'],
    "types":mons[mon5]["types"],
    "bst":mons[mon5]['bst'],
    "status":"none",
    "pic":"(img)",
    "notes":{
    "level":[],
    "ability":[],
    "stringnote":"tanks a stab eq",
    "stats":["","","","","","","",""],
    "statnotes":["","","","","",""],
    "moves":["Discharge","Tail Glow","Energy Ball","Flamethrower"]}}
dataset6={"name":mons[mon6]['name'],
    "form":mons[mon6]['form'],
    "level":[],
    "tag":mons[mon6]['tag'],
    "evo":mons[mon6]['evo'],
    "ability":mons[mon6]["ability"],
    "weight":mons[mon6]['weight'],
    "types":mons[mon6]["types"],
    "bst":mons[mon6]['bst'],
    "status":"none",
    "pic":"(img)",
    "notes":{
    "level":[],
    "ability":[],
    "stringnote":"tanks a stab eq",
    "stats":["","","","","","","",""],
    "statnotes":["","","","","",""],
    "moves":["Discharge","Tail Glow","Energy Ball","Flamethrower"]}}
attackingmon=dataset1
defendingmon=dataset4
attackingmon["types"].append("Grass")
dataset=[dataset1,dataset2,dataset3,dataset4,dataset5,dataset6]
dataset4["notes"]["moves"][0]="Dragon Pulse"
if txtfile[0].find("notetake")!=-1:
    mons[mon1]["stringnotes"]=txtfile[2][0:-1]
    mons[mon1]["ability"].append(txtfile[3][0:-1])
    mons[mon1]["lastseenat"].append(txtfile[4][0:-1])
    mons[mon1]["moves"].append(txtfile[5][0:-1]+", "+txtfile[4][0:-1])
    mons[mon1]["notes"].append(txtfile[6][0:-1])
    monsfile=r"C:\Users\scien\Documents\GitHub\Orange-Peeler\mon-data"
    with open(monsfile, "w") as f:
        json.dump(mons, f)
for item in dataset:
    if item["name"]!="Egg":
        print(item["notes"]["moves"])

#arrays for defining the effectiveness of typed attacks or special moves
typetable={
"Normal":[1,1,1,1,1,.5,1,0,.5,1,1,1,1,1,1,1,1,1,1],
"Fighting":[2,1,.5,.5,1,2,.5,0,2,1,1,1,1,.5,2,1,2,.5,1],
"Flying":[1,2,1,1,1,.5,2,1,.5,1,1,2,.5,1,1,1,1,1,1],
"Poison":[1,1,1,.5,.5,.5,1,.5,0,1,1,2,1,1,1,1,1,2,1],
"Ground":[1,1,0,2,1,2,.5,1,2,2,1,.5,2,1,1,1,1,1,1],
"Rock":[1,.5,2,1,.5,1,2,1,.5,2,1,1,1,1,2,1,1,1,1],
"Bug":[1,.5,.5,.5,1,1,1,.5,.5,.5,1,2,1,2,1,1,2,.5,1],
"Ghost":[0,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,.5,1,1],
"Steel":[1,1,1,1,1,2,1,1,.5,.5,.5,1,.5,1,2,1,1,2,1],
"Fire":[1,1,1,1,1,.5,2,1,2,.5,.5,2,1,1,2,.5,1,1,1],
"Water":[1,1,1,1,2,2,1,1,1,2,.5,.5,1,1,1,.5,1,1,1],
"Grass":[1,1,.5,.5,2,2,.5,1,.5,.5,2,.5,1,1,1,.5,1,1,1],
"Electric":[1,1,2,1,0,1,1,1,1,1,2,.5,.5,1,1,.5,1,1,1],
"Psychic":[1,2,1,2,1,1,1,1,.5,1,1,1,1,.5,1,1,0,1,1],
"Ice":[1,1,2,1,2,1,1,1,.5,.5,.5,2,1,1,.5,2,1,1,1],
"Dragon":[1,1,1,1,1,1,1,1,.5,1,1,1,1,1,1,2,1,0,1],
"Dark":[1,.5,1,1,1,1,1,2,1,1,1,1,1,2,1,1,.5,.5,1],
"Fairy":[1,2,1,.5,1,1,1,1,.5,.5,1,1,1,1,1,2,2,1,1],
"Null":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
"Freeze-Dry":[1,1,2,1,2,1,1,1,.5,.5,2,2,1,1,.5,2,1,1,1],
"FreezeDryNormalize":[1,1,1,1,1,.5,1,0,.5,1,2,1,1,1,1,1,1,1,1],
"DeltaStreamElectric":[1,1,1,1,0,1,1,1,1,1,2,.5,.5,1,1,.5,1,1,1],
"DeltaStreamIce":[1,1,1,1,2,1,1,1,.5,.5,.5,2,1,1,.5,2,1,1,1],
"DeltaStreamRock":[1,.5,1,1,.5,1,2,1,.5,2,1,1,1,1,2,1,1,1,1],
"FlyingPress":[2,2,.5,.5,1,1,1,0,1,1,1,2,.5,.5,2,1,2,.5,1],
"FlyingPressElectrify":[1,2,2,1,0,.5,2,1,.5,1,2,1,.25,1,1,.5,1,1,1],
"FlyingPressNormalize":[1,2,1,1,1,.25,2,0,.25,1,1,2,.5,1,1,1,1,1,1],
"ThousandArrows":[1,1,1,2,1,2,.5,1,2,2,1,.5,2,1,1,1,1,1,1]}
#defines the columns for the arrays corresponding to the type hit
typedic={
    "Normal":0,
    "Fighting":1,
    "Flying":2,
    "Poison":3,
    "Ground":4,
    "Rock":5,
    "Bug":6,
    "Ghost":7,
    "Steel":8,
    "Fire":9,
    "Water":10,
    "Grass":11,
    "Electric":12,
    "Psychic":13,
    "Ice":14,
    "Dragon":15,
    "Dark":16,
    "Fairy":17,
    "Null":18,}
#extracts and calculates relevant type combo for defenders
def coverage(movedef):
    typemult=1
    weatmult=1
    stabmult=1
    terrmult=1
    for item in range(0,len(defendingmon["types"])):
        typemult=typemult*(typetable[movedef][typedic[dataset4["types"][item]]])
    if movedef in attackingmon["types"]:
        if attability=="adaptability":
            stabmult=2
        else:
            stabmult=1.5
    if terrain=="grassy":
        if movedef=="Grass":
            terrmult=1.5
    if terrain=="misty":
        if movedef=="Dragon":
            terrmult=.5
    if terrain=="electric":
        if movedef=="Electric":
            terrmult=1.5
    if terrain=="psychic":
        if movedef=="Psychic":
            terrmult=1.5
    if weather=="sun":
        if movedef=="Fire":
            weatmult=1.5
        if movedef=="Water":
            weatmult=.5
    if weather=="rain":
        if movedef=="Fire":
            weatmult=.5
        if movedef=="Water":
            weatmult=1.5
    return typemult*weatmult*stabmult*terrmult
if txtfile[0].find("coverage")!=-1:
    for item in range(0,4):
        print(coverage(movesfile[attackingmon["notes"]["moves"][item]]["type"])*int(movesfile[attackingmon["notes"]["moves"][item]]["power"]))
        txt.write(str("{"))
        txt.write(str(coverage(movesfile[attackingmon["notes"]["moves"][item]]["type"])*int(movesfile[attackingmon["notes"]["moves"][item]]["power"])))
        txt.write(str(", "+movesfile[attackingmon["notes"]["moves"][item]]["type"]))
        txt.write(str(", "+movesfile[attackingmon["notes"]["moves"][item]]["acc"]))
        txt.write(str(", "+movesfile[attackingmon["notes"]["moves"][item]]["power"]))
        txt.write(str(", "+movesfile[attackingmon["notes"]["moves"][item]]["pp"]))
        txt.write(str("}\n"))
if txtfile[0].find("noteclear")!=-1:
    for mon in mons:
        monsfile=r"C:\Users\scien\Documents\GitHub\Orange-Peeler\mon-data"
        mons[mon]["ability"]=[]
        mons[mon]["notes"]=[]
        mons[mon]["stringnotes"]=""
        mons[mon]["lastseenat"]="-"
        mons[mon]["moves"]=[]
        with open(monsfile, "w") as f:
            json.dump(mons, f)
    txt.write("done")
print(mons["Sylveon"])